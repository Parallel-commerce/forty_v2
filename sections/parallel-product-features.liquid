{% comment %}
  ** Developed by: Matt Collins & Parallel Commerce
  ** Description: This section is used to highlight product features using clickable dots.
{% endcomment %}

{% schema %}
{
  "name": "Product Features",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Product Features"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Text",
      "default": "<p>Share information about your product features</p>"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "Small"
        },
        {
          "value": "h1",
          "label": "Large"
        }
      ],
      "default": "h1",
      "label": "Heading size"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    }
  ],
  "blocks": [
    {
      "type": "feature",
      "name": "Feature",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Feature"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Text",
          "default": "Feature description"
        },
        {
          "type": "range",
          "id": "position_x",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Horizontal position",
          "default": 50
        },
        {
          "type": "range",
          "id": "position_y",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Vertical position",
          "default": 50
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "ParallelProduct Features",
      "blocks": [
        {
          "type": "feature"
        }
      ]
    }
  ]
}
{% endschema %}

<div class="page-width">
  <div class="product-features">
    {%- if section.settings.heading != blank or section.settings.text != blank -%}
      <div class="product-features__header">
        {%- if section.settings.heading != blank -%}
          <h2 class="product-features__heading {{ section.settings.heading_size }}">{{ section.settings.heading }}</h2>
        {%- endif -%}
        {%- if section.settings.text != blank -%}
          <div class="product-features__text rte">{{ section.settings.text }}</div>
        {%- endif -%}
      </div>
    {%- endif -%}

    <div class="product-features__image-wrapper">
      <div class="media media--transparent ratio"{% if section.settings.image != blank %} style="--ratio-percent: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%"{% else %} style="--ratio-percent: 100%"{% endif %}>
        {%- if section.settings.image != blank -%}
          {%- capture sizes -%}(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px) calc(100vw - 100px), calc(100vw - 30px){%- endcapture -%}
          {{
            section.settings.image
            | image_url: width: 1500
            | image_tag:
              sizes: sizes,
              widths: '550, 720, 990, 1100, 1500'
          }}
        {%- else -%}
          {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
        {%- endif -%}
      </div>

      {%- if section.settings.product != blank -%}
        <div class="product-features__product-info">
          <a href="{{ section.settings.product.url }}" class="product-features__product-link">
            <h3 class="product-features__product-title">{{ section.settings.product.title }}</h3>
            <div class="product-features__product-price">
              {% render 'price', product: section.settings.product %}
            </div>
          </a>
        </div>
      {%- endif -%}

      {%- for block in section.blocks -%}
        <button
          type="button"
          class="product-features__marker"
          style="left: {{ block.settings.position_x }}%; top: {{ block.settings.position_y }}%;"
          aria-expanded="false"
          aria-controls="Feature-{{ block.id }}"
          {{ block.shopify_attributes }}
        >
          <span class="product-features__marker-dot"></span>
        </button>

        <div
          id="Feature-{{ block.id }}"
          class="product-features__info-box"
          style="left: {{ block.settings.position_x }}%; top: {{ block.settings.position_y }}%;"
          aria-hidden="true"
        >
          <button type="button" class="product-features__close-button" aria-label="Close">
            <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M13 1L1 13M1 1L13 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          <h3 class="product-features__info-title">{{ block.settings.title }}</h3>
          <div class="product-features__info-text">{{ block.settings.text }}</div>
        </div>
      {%- endfor -%}
    </div>
  </div>
</div>

{% stylesheet %}
.product-features {
  position: relative;
}

.product-features__header {
  text-align: center;
  margin-bottom: 2rem;
}

.product-features__heading {
  margin: 0 0 1rem;
}

.product-features__text {
  margin: 0;
}

.product-features__image-wrapper {
  position: relative;
  width: 100%;
}

.media {
  position: relative;
  height: 0;
  padding-bottom: var(--ratio-percent);
}

.media img {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
}

.product-features__marker {
  position: absolute;
  transform: translate(-50%, -50%);
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  z-index: 2;
  width: 20px;
  height: 20px;
}

.product-features__marker-dot {
  display: block;
  width: 20px;
  height: 20px;
  background: #000;
  border-radius: 50%;
  position: relative;
  border: 2px solid #fff;
}

.product-features__marker-dot::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: #000;
  border-radius: 50%;
  animation: pulse 2s infinite;
  top: 0;
  left: 0;
}

.product-features__info-box {
  position: absolute;
  transform: translate(-50%, -50%) scale(0.8);
  background: #fff;
  padding: 1.5rem;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 3;
  min-width: 200px;
  max-width: 300px;
  opacity: 0;
  visibility: hidden;
  transition: transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease;
  pointer-events: none;
}

.product-features__info-box[aria-hidden="false"] {
  transform: translate(-50%, -50%) scale(1);
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}

.product-features__close-button {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: none;
  border: none;
  padding: 0.5rem;
  cursor: pointer;
  color: #000;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  transition: background-color 0.2s ease;
}

.product-features__close-button:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.product-features__info-title {
  margin: 0 0 0.5rem;
  font-size: 1.2rem;
}

.product-features__info-text {
  margin: 0;
  font-size: 0.9rem;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.product-features__product-info {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  background: rgba(255, 255, 255, 0.9);
  padding: 1rem;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 2;
  max-width: 200px;
}

.product-features__product-link {
  text-decoration: none;
  color: inherit;
  display: block;
}

.product-features__product-title {
  margin: 0 0 0.5rem;
  font-size: 1rem;
  font-weight: 500;
}

.product-features__product-price {
  font-size: 0.9rem;
  font-weight: 600;
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const markers = document.querySelectorAll('.product-features__marker');
  
  markers.forEach(marker => {
    const infoBox = document.getElementById(marker.getAttribute('aria-controls'));
    const closeButton = infoBox.querySelector('.product-features__close-button');
    
    marker.addEventListener('click', () => {
      const isExpanded = marker.getAttribute('aria-expanded') === 'true';
      marker.setAttribute('aria-expanded', !isExpanded);
      infoBox.setAttribute('aria-hidden', isExpanded);
    });
    
    closeButton.addEventListener('click', (e) => {
      e.stopPropagation();
      marker.setAttribute('aria-expanded', 'false');
      infoBox.setAttribute('aria-hidden', 'true');
    });
  });
});
{% endjavascript %}
